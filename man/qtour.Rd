\name{qtour}
\alias{qtour}
\title{Create a tour associated with a mutaframe}
\usage{
qtour(vars = ~., data, tour_path = grand_tour(), aps = 1, fps = 30, rescale = TRUE, 
    sphere = FALSE, ...)
}
\arguments{
  \item{vars}{variable names to be used in the tour (parsed
  by \code{\link{var_names}})}

  \item{data}{a mutaframe created by \code{\link{qdata}}}

  \item{tour_path}{tour path generator, defaults to 2d
  grand tour}

  \item{aps}{target angular velocity (in radians per
  second)}

  \item{fps}{target frames per second (defaults to 30)}

  \item{rescale}{if true, rescale all variables to range
  [0,1]?}

  \item{sphere}{if true, sphere all variables}

  \item{...}{ignored}
}
\value{
  An object generated by reference classes with signals.
}
\description{
  The \pkg{tourr} package is used to create the tour
  projections. This function creates an \R object to
  manipulate the tour, and all the changes in the tour can
  be reflected immediately in plots created in
  \pkg{cranvas}.
}
\details{
  Because the data provided to the tour is a mutaframe, it
  can listen to changes through listeners on it. Usually
  these listeners can update the plots which are created
  from this mutaframe (further, those linked to this
  mutaframe) on the fly.

  Four basic methods can be applied to the object returned
  by this function (say, \code{tour}):

  \describe{ \item{\code{tour$start()}}{starts the tour
  (tour projections change successively and are attached to
  the mutaframe; column names are \code{tour_1},
  \code{tour_2}, ...)} \item{\code{tour$stop()}}{pauses the
  tour} \item{\code{tour$slower()}}{makes the tour slower}
  \item{\code{tour$faster()}}{makes it faster.} }

  We can also modify the parameters passed to
  \code{\link{qtour}()} on the fly through this object. For
  example, we can change the type of tour to the guided
  tour using a syntax like \code{tour$tour_path <-
  guided_tour(...)}. All other parameters can be changed
  similarly, including \code{vars}, \code{aps}, \code{fps},
  \code{rescale} and \code{sphere}.
}
\examples{
library(cranvas)
library(reshape)
library(tourr)
data(flea, package = "tourr")

qflea <- qdata(flea, color = species)
flea_tour <- qtour(1:6, data = qflea, tour_path = grand_tour(3))
flea_tour$start()

Sys.sleep(0.5)  # need a pause to generate projections
qscatter(proj1, proj2, data = qflea, xlim = c(-0.8, 0.8), ylim = c(-0.8, 0.8), xlab = "Projection 1", 
    ylab = "Projection 2")
qparallel(~proj1 + proj2 + proj3, data = qflea)
qhist(proj1, data = qflea, binwidth = 0.05, xlim = c(-1, 1), ylim = c(0, 10))

flea_tour$pause()

## adjust speed
flea_tour$start()
flea_tour$speed(2)  # speed up (twice as fast)
flea_tour$speed(0.5)  # slow down

## change the type of tour
flea_tour$tour_path <- guided_tour(holes, d = 3)
flea_tour$tour_path <- grand_tour(d = 3)
flea_tour$tour_path <- guided_tour(lda_pp(flea$species), d = 3)
flea_tour$tour_path <- grand_tour(d = 3)

## do sphering
flea_tour$sphere <- TRUE

}
\author{
  Yihui Xie <\url{http://yihui.name}>
}
